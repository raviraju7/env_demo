Use database dev_landing;
Use schema dev_landing.cps;

/******************************************************************************
One time sequence creation step - executed along with one off initial ingestion
CREATE OR REPLACE SEQUENCE Run_Number_Sequence START = 1 INCREMENT = 1;
SELECT Run_Number_Sequence.nextval -- to get the next sequence value;
******************************************************************************/

select * from DEV_LANDING.CPS.LOAD_CONTRACT_HEADER;
select * from DEV_LANDING.CPS.LOAD_PRICE_SCHEDULE;

/*****************************************************************************************************************
Compasion between Datahub and Snowflake Procedure:

In oracle datahub 
When an error occured, the Procedure exit and log the first error only to the audit table
If no error then the Merge statement insert/update the whole table in one go.

In Snowflake 
The procedure process one record at a time and does similar checks
and log every row that had an error into "audit_contract_detail - E (Error)" table with key details to trace back from the uploaded input 
(i.e. from the newly loaded load table data).

When no error found for a row then the record get loaded to the master table and 
also get logged into the audit table "audit_contract_detail - S (Success)" table with key details to link back the uploaded input 
(i.e. from the newly loaded load table data).

Similarly when no error and a record is marked for update/delete then the audit table is logged with "audit_contract_detail - S (Success)" 
i.e. log the successful updation/deletion from the master table along with the key details like "updated/deleted record" from the destination

************************************************************************************************************************/

/************************************************************************************************************************
Records falls under one of these criteria

New - insert (Status: S-Success)
Existing (modified) - Update - Status: S-Success
Existing - No change/No action - only log the details in Audit_Rejected"  (Status: W-Warning)
Delete flagged (existing)- Delete (Status: S-Success)
Delete flagged (not found in existing) - No change - only log the details in Audit_Rejected (Status: W-Warning)


None of them abend the process: They just log an error / success / reject and the process continue and completes.


*************************************************************************************************************************/

Create or replace PROCEDURE CONTRACT_HEADER ()
returns varchar 
LANGUAGE SQL
EXECUTE AS OWNER
AS
$$
/* Declare Variables for load_contract_header procedure */   

 DECLARE
  v_Message varchar2(4000); 
  v_Run_Number resultset default (select run_id_seq.NEXTVAL );
  row_count INTEGER DEFAULT 0;
  v_Count Number:=0;  
  v_Contract_Reference varchar2(255):='ZZ_NO_ERROR';
  vQuery varchar2(1000);

  c1 cursor for select * from LOAD_CONTRACT_HEADER;

BEGIN

  FOR res IN c1 DO
    v_Message := 'contract Start Date format is Not correct for Contract: ';
    var := res.contract_reference;
  END FOR;
  RETURN var;

End;
$$
;
call CONTRACT_HEADER ();

FOR RECORD IN C1 DO


    ------*************************  CONTRACT_START_DATE ****************************************1
    
    v_Message = 'contract Start Date format is Not correct for Contract: ';
    v_Count =0;
    Select UPPER(Trim(CONTRACT_REFERENCE)) into v_Contract_Reference from
        (  select 'ZZ_NO_ERROR' Contract_Reference from dual
           union
           Select UPPER(Trim(CONTRACT_REFERENCE)) From LOAD_CONTRACT_HEADER
           where is_date(CONTRACT_START_DATE::variant) = 0 and rownum =1
           order by Contract_Reference)
    where rownum = 1;
    If v_Contract_Reference <> 'ZZ_NO_ERROR' then            
                   INSERT INTO audit_contract_detail (process_timestamp,   RUN_ID,   WORKFLOW_NAME, SEVERITY,MESSAGE) 
                                      VALUES (sysdate,:v_Run_Number, 'CONTRACT_HEADER', 'E', :v_Message || v_Contract_Reference); 
    v_Count :=1;
    End If;

End For;




message_id INT IDENTITY (1,1) comment 'PK - 1 entry per event',
run_id int comment 'FK for audit contract table',
message varchar2(4000) comment 'event summary with a key to trace back the Error or success or Rejected rows',
severity char(1) comment 'S-Success (inserted/updated/deleted) E-Error (Failure due to format or other issue) W-Warning (Reject - No action)',
impacted_record variant comment 'record that was either loaded successfully or had an error',
process_timestamp timestamp DEFAULT CURRENT_TI

------***********************  ORIGINAL_EXPIRY_DATE ***************************************2

v_Message:= 'ORIGINAL EXPIRY DATE format is Not correct for Contract: ';
Select UPPER(Trim(CONTRACT_REFERENCE)) into v_Contract_Reference from
    (  select 'ZZ_NO_ERROR' Contract_Reference from dual
       union
       Select UPPER(Trim(CONTRACT_REFERENCE)) From LOAD.CONTRACT_HEADER
       where stage.is_date(ORIGINAL_EXPIRY_DATE) = 0 and rownum =1 and v_Count =0
       order by Contract_Reference)
where rownum = 1;
If v_Contract_Reference <> 'ZZ_NO_ERROR' then            
               INSERT INTO STAGE.Message (WHEN,   RUN_NUMBER,   WORKFLOW_NAME,       CHANGE_FLAG,SEVERITY,MESSAGE) 
                                  VALUES (sysdate,v_Run_Number, 'LOAD_CONTRACT_HEADER',   'I',        'E', v_Message || v_Contract_Reference); 
v_Count :=1;
End If;
------************************  CURRENT_EXPIRY_DATE  *****************************************3

v_Message:= 'CURRENT_EXPIRY_DATE format is Not correct for Contract: ';
Select UPPER(Trim(CONTRACT_REFERENCE)) into v_Contract_Reference from
    (  select 'ZZ_NO_ERROR' Contract_Reference from dual
       union
       Select UPPER(Trim(CONTRACT_REFERENCE)) From LOAD.CONTRACT_HEADER
       where stage.is_date(CURRENT_EXPIRY_DATE) = 0 and rownum =1 and v_Count =0
       order by Contract_Reference)
where rownum = 1;
If v_Contract_Reference <> 'ZZ_NO_ERROR' then            
               INSERT INTO STAGE.Message (WHEN,   RUN_NUMBER,   WORKFLOW_NAME,       CHANGE_FLAG,SEVERITY,MESSAGE) 
                                  VALUES (sysdate,v_Run_Number, 'LOAD_CONTRACT_HEADER',   'I',        'E', v_Message || v_Contract_Reference); 
v_Count :=1;
End If;
------***********************  RIGHT_OF_RENEWAL_NOTICE_DATE  ************************************4

v_Message:= 'RIGHT_OF_RENEWAL_NOTICE_DATE format is Not correct for Contract: ';
Select UPPER(Trim(CONTRACT_REFERENCE)) into v_Contract_Reference from
    (  select 'ZZ_NO_ERROR' Contract_Reference from dual
       union
       Select UPPER(Trim(CONTRACT_REFERENCE)) From LOAD.CONTRACT_HEADER
       where stage.is_date(RIGHT_OF_RENEWAL_NOTICE_DATE) = 0 and rownum =1 and v_Count =0
       order by Contract_Reference)
where rownum = 1;
If v_Contract_Reference <> 'ZZ_NO_ERROR' then            
               INSERT INTO STAGE.Message (WHEN,   RUN_NUMBER,   WORKFLOW_NAME,       CHANGE_FLAG,SEVERITY,MESSAGE) 
                                  VALUES (sysdate,v_Run_Number, 'LOAD_CONTRACT_HEADER',   'I',        'E', v_Message || v_Contract_Reference); 
v_Count :=1;
End If;

------*********************  TOTAL_CONTRACT_VALUE  ********************************5
v_Message:= 'TOTAL_CONTRACT_VALUE format is Not correct for Contract: ';
Select UPPER(Trim(CONTRACT_REFERENCE)) into v_Contract_Reference from
    (  select 'ZZ_NO_ERROR' Contract_Reference from dual
       union
       Select UPPER(Trim(CONTRACT_REFERENCE)) From LOAD.CONTRACT_HEADER
       where STAGE.IS_NUMBER(TOTAL_CONTRACT_VALUE) = 0 and rownum =1 and v_Count =0
       order by Contract_Reference)
where rownum = 1;
If v_Contract_Reference <> 'ZZ_NO_ERROR' then            
               INSERT INTO STAGE.Message (WHEN,   RUN_NUMBER,   WORKFLOW_NAME,       CHANGE_FLAG,SEVERITY,MESSAGE) 
                                  VALUES (sysdate, v_Run_Number, 'LOAD_CONTRACT_HEADER',   'I',        'E', v_Message || v_Contract_Reference); 
v_Count :=1;
End If;

------***********   TOTAL_ANNUAL_VALUE   **************************************************6
v_Message:= 'TOTAL ANNUAL VALUE format is Not correct for Contract: ';
Select UPPER(Trim(CONTRACT_REFERENCE)) into v_Contract_Reference from
    (  select 'ZZ_NO_ERROR' Contract_Reference from dual
       union
       Select UPPER(Trim(CONTRACT_REFERENCE)) From LOAD.CONTRACT_HEADER
       where STAGE.IS_NUMBER(TOTAL_ANNUAL_VALUE) = 0 and rownum =1 and v_Count =0
       order by Contract_Reference)
where rownum = 1;
If v_Contract_Reference <> 'ZZ_NO_ERROR' then            
               INSERT INTO STAGE.Message (WHEN,   RUN_NUMBER,   WORKFLOW_NAME,       CHANGE_FLAG,SEVERITY,MESSAGE) 
                                  VALUES (sysdate, v_Run_Number, 'LOAD_CONTRACT_HEADER',   'I',        'E', v_Message || v_Contract_Reference); 
v_Count :=1;
End If;

--******  RAISE ERROR AND PREVENT ANY UPDATES OR INSERTS ******---------
if v_count > 0 then
  commit;
  raise_application_error(-20101, 'Data error, check the message log!');
end if;


MERGE INTO STAGE.CONTRACT_HEADER DS
USING LOAD.CONTRACT_HEADER DL
ON (UPPER(trim(DS.CONTRACT_REFERENCE))=UPPER(trim(DL.CONTRACT_REFERENCE)))
    WHEN MATCHED THEN
        UPDATE SET  
            DS.CONTRACT_SUPPLIER_NAME_FFORMAT=substr(DL.CONTRACT_SUPPLIER_NAME_FFORMAT,1,255),
            DS.SUPPLIER_NAME=substr(DL.SUPPLIER_NAME,1,255),
            DS.CONTRACT_TITLE=substr(DL.CONTRACT_TITLE,1,255),
            DS.CONTRACT_DESCRIPTION=substr(DL.CONTRACT_DESCRIPTION,1,255),
            DS.CATEGORY_TYPE=substr(DL.CATEGORY_TYPE,1,20),
            DS.VARIATION_NUMBER=substr(DL.VARIATION_NUMBER,1,60),
            DS.NOVATED=substr(DL.NOVATED,1,10),
            DS.CONTRACT_MANAGER=substr(DL.CONTRACT_MANAGER,1,30),
            DS.PROCUREMENT_SPECIALIST=substr(DL.PROCUREMENT_SPECIALIST,1,30),
            DS.STATUS=substr(DL.STATUS,1,30),
            DS.CONTRACT_GROUP=substr(DL.CONTRACT_GROUP,1,30),
            DS.CONTRACT_PARTIES=substr(DL.CONTRACT_PARTIES,1,30),
            DS.CONTRACT_START_DATE = Case 
                                      When DL.CONTRACT_START_DATE is not null then to_date (DL.CONTRACT_START_DATE,'DD/MM/YYYY') 
                                      else null 
                                     end, 
            DS.ORIGINAL_EXPIRY_DATE = Case 
                                      When DL.ORIGINAL_EXPIRY_DATE is not null then to_date (DL.ORIGINAL_EXPIRY_DATE,'DD/MM/YYYY') 
                                      else null 
                                    end, 
            DS.CURRENT_EXPIRY_DATE = Case 
                                     When DL.CURRENT_EXPIRY_DATE is not null then to_date (DL.CURRENT_EXPIRY_DATE,'DD/MM/YYYY') 
                                     else DS.ORIGINAL_EXPIRY_DATE 
                                     end,


            DS.PLANNED_ACTION_ON_EXPIRY=substr(DL.PLANNED_ACTION_ON_EXPIRY,1,50),
            DS.RIGHT_OF_RENEWAL_NOTICE_DATE = Case 
                                              When DL.RIGHT_OF_RENEWAL_NOTICE_DATE is not null then to_date (DL.RIGHT_OF_RENEWAL_NOTICE_DATE,'DD/MM/YYYY') 
                                              else null 
                                              end,

            DS.RIGHT_OF_RENEWAL_STATUS=substr(DL.RIGHT_OF_RENEWAL_STATUS,1,30),
            DS.ROR_TERM_NOTE=substr(DL.ROR_TERM_NOTE,1,255),
            DS.SUB_CATEGORY=substr(DL.SUB_CATEGORY,1,100),
            DS.PROCUREMENT_CATEGORY=substr(DL.PROCUREMENT_CATEGORY,1,100),
            DS.TOTAL_CONTRACT_VALUE= to_number(substr(to_char(DL.TOTAL_CONTRACT_VALUE), 1, 10)),
            DS.TOTAL_ANNUAL_VALUE=to_number(substr(DL.TOTAL_ANNUAL_VALUE, 1, 10)),
            DS.CONTRACT_CLASS=substr(DL.CONTRACT_CLASS,1,100),
            DS.PRICE_REVIEW_CLAUSE=substr(DL.PRICE_REVIEW_CLAUSE,1,20),
            DS.LEAD_AGENCY=substr(DL.LEAD_AGENCY,1,30),
            DS.LEGACY_CONTRACT_REFERENCE=substr(DL.LEGACY_CONTRACT_REFERENCE,1,255),
            DS.SUBSEQUENT_CONTRACT_REF=substr(DL.SUBSEQUENT_CONTRACT_REF,1,255),
            --DS.SUPPLIER_MASTER_ID =NVL((SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1), 0),
            DS.SUPPLIER_MASTER_ID = 
            Case 
            when NVL((SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1), 0) != 0 
            then (SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1)

            when NVL((SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.ALTERNATE_SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1), 0) != 0 
            then (SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.ALTERNATE_SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1)
             Else 0
             End,


            DS.WHEN_UPDATED= sysdate,
            DS.WHO_CHANGED=substr(DL.WHO_CHANGED,1,20)

    WHEN NOT MATCHED THEN

        INSERT(
        DS.CONTRACT_REFERENCE
        ,DS.CONTRACT_SUPPLIER_NAME_FFORMAT
        ,DS.SUPPLIER_NAME
        ,DS.CONTRACT_TITLE,
        DS.CONTRACT_DESCRIPTION,
        DS.CATEGORY_TYPE
        ,DS.VARIATION_NUMBER,
        DS.NOVATED,
        DS.CONTRACT_MANAGER,
        DS.PROCUREMENT_SPECIALIST,
        DS.STATUS,
        DS.CONTRACT_GROUP,
        DS.CONTRACT_PARTIES,
        DS.CONTRACT_START_DATE,
        DS.ORIGINAL_EXPIRY_DATE,
        DS.CURRENT_EXPIRY_DATE,
        DS.PLANNED_ACTION_ON_EXPIRY,
        DS.RIGHT_OF_RENEWAL_NOTICE_DATE,
        DS.RIGHT_OF_RENEWAL_STATUS,
        DS.ROR_TERM_NOTE,
        DS.SUB_CATEGORY,DS.
        PROCUREMENT_CATEGORY,
        DS.TOTAL_CONTRACT_VALUE,
        DS.TOTAL_ANNUAL_VALUE,
        DS.CONTRACT_CLASS,
        DS.PRICE_REVIEW_CLAUSE,
        DS.LEAD_AGENCY,
        DS.LEGACY_CONTRACT_REFERENCE,
        DS.SUBSEQUENT_CONTRACT_REF,
        DS.SUPPLIER_MASTER_ID,
        DS.WHEN_CREATED,
        DS.WHEN_UPDATED,
        DS.WHO_CHANGED

        )
        values
        (
        substr(UPPER(DL.CONTRACT_REFERENCE),1,255),
        substr(DL.CONTRACT_SUPPLIER_NAME_FFORMAT,1,255),
        substr(DL.SUPPLIER_NAME,1,255),
        substr(DL.CONTRACT_TITLE,1,255),
        substr(DL.CONTRACT_DESCRIPTION,1,255),
        substr(DL.CATEGORY_TYPE,1,20),
        substr(DL.VARIATION_NUMBER,1,60),
        substr(DL.NOVATED,1,10),
        substr(DL.CONTRACT_MANAGER,1,30),
        substr(DL.PROCUREMENT_SPECIALIST,1,30),
        substr(DL.STATUS,1,30),
        substr(DL.CONTRACT_GROUP,1,30),
        substr(DL.CONTRACT_PARTIES,1,30),
        to_date (DL.CONTRACT_START_DATE,'DD/MM/YYYY'), 
        to_date (DL.ORIGINAL_EXPIRY_DATE,'DD/MM/YYYY'),

        Case When DL.CURRENT_EXPIRY_DATE is not NULL then to_date (DL.CURRENT_EXPIRY_DATE,'DD/MM/YYYY')
        ELSE to_date (DL.ORIGINAL_EXPIRY_DATE,'DD/MM/YYYY')
        End
        ,
        substr(DL.PLANNED_ACTION_ON_EXPIRY,1,50),
        to_date (DL.RIGHT_OF_RENEWAL_NOTICE_DATE,'DD/MM/YYYY'),
        substr(DL.RIGHT_OF_RENEWAL_STATUS,1,30),
        substr(DL.ROR_TERM_NOTE,1,255),
        substr(DL.SUB_CATEGORY,1,100),
        substr(DL.PROCUREMENT_CATEGORY,1,100),
        to_number(substr(to_char(DL.TOTAL_CONTRACT_VALUE), 1, 10)),
        to_number(substr(to_char(DL.TOTAL_ANNUAL_VALUE), 1, 10)),
        substr(DL.CONTRACT_CLASS,1,100),
        substr(DL.PRICE_REVIEW_CLAUSE,1,20),
        substr(DL.LEAD_AGENCY,1,30),
        substr(DL.LEGACY_CONTRACT_REFERENCE,1,255),
        substr(DL.SUBSEQUENT_CONTRACT_REF,1,255),
         --DS.SUPPLIER_MASTER_ID =NVL((SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1), 0),

             Case 
            when NVL((SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1), 0) != 0 
            then (SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1)

            when NVL((SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.ALTERNATE_SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1), 0) != 0 
            then (SELECT SM.SUPPLIER_MASTER_ID FROM STAGE.SUPPLIER_MASTER SM Where INITCAP(SM.ALTERNATE_SUPPLIER_NAME) = substr(INITCAP(DL.SUPPLIER_NAME),1,255) AND ROWNUM = 1)
             Else 0
             End,
        sysdate,
        sysdate,
        substr(DL.WHO_CHANGED,1,20)
        );

------*******************SUPPLIER_MASTER_ID = 0 ********************************************** 8
v_message := 'SupplierName not in Supplier Master Table';
vQuery := 'INSERT INTO  STAGE.Message(WHEN,   RUN_NUMBER,   WORKFLOW_NAME,       CHANGE_FLAG,SEVERITY,MESSAGE )';
vQuery := vQuery || 'select  ''' || sysdate || ''',' || v_Run_Number || ', ''CONTRACT_HEADER'',   ''I'',        ''W'', ''' || v_message ||  '''';
vQuery := vQuery || ' from stage.contract_header';
vQuery := vQuery || ' Where SUPPLIER_MASTER_ID = 0';

Execute Immediate vQuery;  


END CONTRACT_HEADER;

